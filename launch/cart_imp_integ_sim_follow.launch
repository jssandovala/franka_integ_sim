<?xml version="1.0"?>
<launch>

  <!-- Gazebo & GUI Configuration -->
  <arg name="headless"    default="false" doc="Should the gazebo GUI be launched?" />
  <arg name="paused"      default="false" doc="Should the simulation directly be stopped at 0s?" />
  <arg name="rviz"        default="true" doc="Should RVIz be launched?" />

  <!-- Robot Customization -->
  <arg name="arm_id"      default="panda" doc="Name of the panda robot to spawn" />
  <arg name="use_gripper" default="true"  doc="Should a franka hand be mounted on the flange?" />
  <arg name="x"           default="0"     doc="How far forward to place the base of the robot in [m]?" />
  <arg name="y"           default="0"     doc="How far leftwards to place the base of the robot in [m]?" />
  <arg name="z"           default="0.733"     doc="How far upwards to place the base of the robot in [m]?" />
  <arg name="roll"        default="0"     doc="How much to rotate the base of the robot around its X-axis in [rad]?" />
  <arg name="pitch"       default="0"     doc="How much to rotate the base of the robot around its Y-axis in [rad]?" />
  <arg name="yaw"         default="0"     doc="How much to rotate the base of the robot around its Z-axis in [rad]?" />
  <arg name="initial_joint_positions"
       doc="Initial joint configuration of the panda. Specify as a list of name/value pairs in form of '-J [name-of-joint] [value-in-rad]'. Default is a 90 degree bend in the elbow"
       default="-J $(arg arm_id)_joint1 0.0
                -J $(arg arm_id)_joint2 -0.785398163397
                -J $(arg arm_id)_joint3 0.0
                -J $(arg arm_id)_joint4 -2.35619449019
                -J $(arg arm_id)_joint5 0.0
                -J $(arg arm_id)_joint6 1.57079632679
                -J $(arg arm_id)_joint7 0.785398163397"
       />

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find franka_integ_sim)/worlds/integ.world"/> <!-- world -->
    <!-- Always start in paused mode, and only unpause when spawning the model -->
    <arg name="paused" value="true"/>
    <arg name="gui" value="$(eval not arg('headless'))"/>
    <arg name="use_sim_time" value="true"/>
  </include>

  <param name="robot_description"
         command="xacro $(find franka_integ_sim)/description/urdf/panda_arm_cam.urdf.xacro
                  gazebo:=true
                  hand:=$(arg use_gripper)
                  arm_id:=$(arg arm_id)
                  xyz:='$(arg x) $(arg y) $(arg z)'
                  rpy:='$(arg roll) $(arg pitch) $(arg yaw)'">
  </param>

  <rosparam file="$(find franka_integ_sim)/config/franka_hw_sim.yaml" subst_value="true" />
  <rosparam file="$(find franka_integ_sim)/config/sim_controllers.yaml" subst_value="true" />

  <param name="F_T_NE" value="-0.7071 0.7071 0 0 -0.7071 -0.7071 0 0 0 0 1 0 0 0 0.2 1" if="$(arg use_gripper)"/>

  <arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')" />
  <node name="$(arg arm_id)_model_spawner"
        pkg="gazebo_ros"
        type="spawn_model"
        args="-param robot_description -urdf -model $(arg arm_id) $(arg unpause)
              $(arg initial_joint_positions)
              "/>

  <!-- Spawn required ROS controllers -->
  <node pkg="controller_manager"
        type="spawner"
        name="$(arg arm_id)_controller_spawner"
        respawn="false" output="screen"
        args="franka_state_controller 'cart_imp_integ_follow'"
  />

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  <node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher">
    <rosparam param="source_list">[franka_state_controller/joint_states, franka_gripper/joint_states] </rosparam>
    <param name="rate" value="30"/>
  </node>
  
  <node name="joint_state_desired_publisher" type="joint_state_publisher" pkg="joint_state_publisher">
    <rosparam param="source_list">[franka_state_controller/joint_states_desired, franka_gripper/joint_states] </rosparam>
    <param name="rate" value="30"/>
    <remap from="joint_states" to="joint_states_desired" />
  </node>

  <!--					Interactive marker - Target						-->
  <include file="$(find franka_integ_sim)/description/launch/target.launch">     
            <arg name="init_x" value="0.35"/>
            <arg name="init_y" value="0.0"/>
            <arg name="init_z" value="0.7"/>      
  </include>

  <node name="interactive_marker_obs" pkg="franka_integ_sim" type="interactive_marker_bidirectional.py" required="true" output="screen">
      <param name="link_name" value="world" />
      <param name="frame" value="target"/>
      <param name="scale" value= "0.15"/>
  </node> 

  <node pkg="franka_integ_sim" type="rviz_gazebo_bidirectional.py" name="rviz_gazebo">
        <param name="target_name" value="target_model"/>
        <param name="pose_topic" value="target_pose"/>
  </node>

  <!--				RVIZ launcher					-->
  <node  pkg="rviz" type="rviz" output="screen" name="rviz" args="-d $(find franka_integ_sim)/rviz/franka_description_with_markers_tools_cam.rviz" if="$(arg rviz)"/>

  <!--					LAUNCHING THE KEYBOARD DEVICE						-->
  <!-- <node pkg="keyboard" type="keyboard" name="keyboard" output="screen" /> -->

</launch>